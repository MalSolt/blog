// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum UserRole {
  ADMIN
  USER
}

model User {
  password      String
  id            String       @default(cuid()) @id
  role          UserRole @default(USER)
  name          String?
  email         String?   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  posts         Post[]
  comments  Comment[]
  likedPosts Post[] @relation("LikedPosts")
  @@map(name: "users")
}

model Post {
  id        String     @default(cuid()) @id
  title     String
  content   String?
  published Boolean @default(false)
  author    User   @relation(fields: [authorId], references: [id])
  authorId  String
  comments  Comment[]
  likedBy User[]  @relation("LikedPosts")
}

model Comment {
  id        Int       @id @default(autoincrement())
  text      String
  createdAt DateTime  @default(now())
  postId    String
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  authorId  String
  author    User      @relation(fields: [authorId], references: [id])
}
